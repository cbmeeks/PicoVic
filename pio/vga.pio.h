// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------- //
// vga_sync //
// -------- //

#define vga_sync_wrap_target 0
#define vga_sync_wrap 3

#define vga_sync_SETUP_OVERHEAD 5
#define vga_sync_WORD_SYNC_OFFSET 14
#define vga_sync_WORD_EXEC_OFFSET 16

static const uint16_t vga_sync_program_instructions[] = {
            //     .wrap_target
    0x602e, //  0: out    x, 14                      
    0x6002, //  1: out    pins, 2                    
    0x60f0, //  2: out    exec, 16                   
    0x0043, //  3: jmp    x--, 3                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program vga_sync_program = {
    .instructions = vga_sync_program_instructions,
    .length = 4,
    .origin = -1,
};

static inline pio_sm_config vga_sync_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + vga_sync_wrap_target, offset + vga_sync_wrap);
    return c;
}
#endif

// ------- //
// vga_rgb //
// ------- //

#define vga_rgb_wrap_target 0
#define vga_rgb_wrap 4

#define vga_rgb_LOOP_TICKS 2
#define vga_rgb_DELAY_INSTR 3
#define vga_rgb_RGB_IRQ 4

static const uint16_t vga_rgb_program_instructions[] = {
            //     .wrap_target
    0xa003, //  0: mov    pins, null                 
    0x20c4, //  1: wait   1 irq, 4                   
    0xa022, //  2: mov    x, y                       
    0x6010, //  3: out    pins, 16                   
    0x0043, //  4: jmp    x--, 3                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program vga_rgb_program = {
    .instructions = vga_rgb_program_instructions,
    .length = 5,
    .origin = -1,
};

static inline pio_sm_config vga_rgb_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + vga_rgb_wrap_target, offset + vga_rgb_wrap);
    return c;
}
#endif

